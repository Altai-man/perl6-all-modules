#!/usr/bin/env perl6
# Copyright © 2017
#     Aleks-Daniel Jakimenko-Aleksejev <alex.jakimenko@gmail.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

use HTTP::UserAgent;
use JSON::Fast;

my $LINK = ‘https://api.github.com/repos/rakudo/rakudo/issues?per_page=60&direction=asc&state=all’;
my $RETRY = 5;

my $dir;
my $ua = HTTP::UserAgent.new: :useragent<Whateverable>;
$ua.timeout = 10;

sub process($data) {
    my $tickets = from-json $data;
    spurt “$dir/{.<number>}”, to-json $_ for @$tickets
}

sub get($url) {
    # note $url;
    my $response;
    for ^$RETRY {
        $response = $ua.get: $url;
        if not $response.is-success {
            note $response.status-line;
            note ‘Sleeping…’;
            sleep 20; # TODO respect the delay provided by github
            next
        }
        process $response.content;

        if $response.header.hash<X-RateLimit-Remaining>[0] ≤ 5 { # github-friendly throttling
            await Promise.at: $response.header.hash<X-RateLimit-Reset>[0];
        }

        my $next = $response.header.hash<Link>.first(*.ends-with: ‘rel= next’);
        return without $next;
        $next ~~ s/^‘<’//;
        $next ~~ s/‘>; rel= next’$//;
        return $next
    }
    die $response.status-line
}

sub MAIN(IO() $dir where .d) {
    mkdir $dir;
    OUTER::(‘$dir’) = $dir;
    my $link = $LINK;
    $link = get $link while $link
}
