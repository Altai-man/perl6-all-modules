=begin pod

=TITLE role IO

=SUBTITLE Tag role for all input/output types

    role IO { }

The IO role provides no functionality itself, and moreso just marks if a
particular object relates to input/output.

=head1 Routines

=head2 sub prompt

    sub prompt($msg)

Prints C<$msg> to the standard output and waits
for the user to type in something and finish with an ENTER.
Returns the string typed in without the trailing newline.

    my $name = prompt("Hi, what's your name? ");

=head2 sub dir

    sub dir(Cool $path = '.', Mu :$test = none('.', '..'))

Returns a list of L<IO::File> and L<IO::Path> objects for the
files and directories found in the $path. If $path is not given
assumes the current directory.

A second optional parameter can be given that will be
matched against the strings to filter out certain entries.
By default it filters out the '.' and '..' entries.

Examples:

    for dir() -> $file {
       say $file;
    }

    dir('path/to/directory');

To include all the entries (including . and ..) write:

    dir(test => all())

To include only entries with a .pl extension write:

    dir(test => /.pl$/)

=head2 sub mkdir

    multi sub mkdir(Int:D $mode, *@dirnames, :$CWD = $*CWD);
    multi sub mkdir($path, $mode = 0o777, :$CWD = $*CWD);

Creates one or more directories with the
L<permissions|http://en.wikipedia.org/wiki/File_system_permissions#Traditional_Unix_permissions>
specified as an integer (thought still subject to
L<umask|http://en.wikipedia.org/wiki/Umask>).

Throws an excpetion of type L<X::IO::Mkdir|/type/X::IO::Mkdir> if the
directory cannot be created.

=head2 sub run

    sub run(*@args ($, *@)) returns Proc::Status:D

Runs an external command without involving a shell (if possible). Expects the
command and each of its command line arguments as a list.

The return value is of L<type Proc::Status|/type/Proc::Status>.

    run 'systemctl', 'restart', 'apache2'

Arguments are not subject to shell expansions, shell variable interpolation or
other shenanigans. See L<#sub shell> if you want that.

=head2 sub shell

    sub shell($cmd) returns Proc::Status:D

Runs a command through the system shell. All shell meta characters are
interpreted by the shell, inluding pipes, redirects, environment variable
substitutions and so on. See L<#sub run> if you don't want that.

The return value is of L<type Proc::Status|/type/Proc::Status>.

    shell 'ls -lR | gzip -9 > ls-lR.gz';

=end pod
