=begin pod

=TITLE role IO::FileTestable

=SUBTITLE Common role for paths that can be tested for filesystem metadata

   role IO::FileTestable does IO { }

=head1 Methods

=head2 File Test operators

X<-e> X<:-f>

    -e
    -f Does not exist in Perl 6. See :e, :f.

X<-M> X<-A> X<-C>

    -M Does not exist in Perl 6. See C<modified>.
    -A Does not exist in Perl 6. See C<accessed>.
    -C Does not exist in Perl 6. See C<changed>.

X<:e> X<:d> X<:f> X<:l> X<:r> X<:w> X<:x> X<:s> X<:z>

    :e Exists
    :d Directory
    :f File
    :l Symbolic link
    :r Readable
    :w Writable
    :x Executable
    :s Size
    :z Zero size

Usage:

If you have a string - a path to something in the filesystem:

    if "path/to/file".IO ~~ :e {
        say 'file exists';
    }

    my $file = "path/to/file";
    if $file.IO ~~ :e {
        say 'file exists';
    }

Instead of the colonpair syntax, you can use method calls too:

    if 'path/to/file'.IO.e {
        say 'file exists';
    }

If you already have an IO object in $file, either by creating one yourself,
or by getting it from another subroutine, such as C<dir>,
you can write this:

    my $file = "path/to/file".IO;
    if $file ~~ :e {
        say 'file exists';
    }

There are also 3 methods for fetching the 3 timestamps of a file (inode),
on Operating Systems where these are available:

=head2 method modified

Timestamp when the file was last modified.

    "path/to/file".IO.modified()

=head2 method accessed

Timestamp when the file was last accessed.

    "path/to/file".IO.accessed()

=head2 method changed

Timestamp when the inode was last changed.

    "path/to/file".IO.changed()

=end pod

