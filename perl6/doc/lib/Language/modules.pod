=begin pod

=TITLE Modules

=SUBTITLE How to create and distribute Perl 6 modules

=head1 Creating and Distributing Modules

If you've written a Perl 6 module and would like to share it with the
community, we'd be delighted to have it listed in the L<Perl 6 modules
directory|http://modules.perl6.org>. C<:)>

For now, the process requires that you use git for your module's version
control.

The instructions herein require that you have a
L<GitHub|http://www.github.com> account so that your module can be shared
from its GitHub repository.

To share your module, do the following:

    =item Create a project directory named after your module. For
    example, if your module is C<Vortex::TotalPerspective>, then create a
    project directory named C<Vortex-TotalPerspective>. This project
    directory name will also be used as the GitHub repo name.

    =begin item
    Make your project directory look like this:

        Vortex-TotalPerspective/
        |-- lib
        |   `-- Vortex
        |       `-- TotalPerspective.pm
        |-- LICENSE
        |-- META.info
        |-- README.md
        `-- t
            `-- basic.t

    If your project contains other modules that help the main module do
    its job, they should go in your lib directory like so:

        lib
        `-- Vortex
            |-- TotalPerspective.pm
            `-- TotalPerspective
                |-- FairyCake.pm
                `-- Gargravarr.pm
    =end item

    =item The C<README.md> file is a L<markdown-formatted|https://help.github.com/articles/markdown-basics/> text file, which
    will later be automatically rendered as HTML by GitHub.

    =item Regarding the C<LICENSE> file, if you have no other preference,
    you might just use the same one that Rakudo Perl 6 uses. Just
    copy/paste the raw form of L<its license|https://github.com/rakudo/rakudo/blob/nom/LICENSE>
    into your own C<LICENSE> file, and change C<"The Perl Foundation">
    in the document to your name or the name of your company.

    =item If you don't yet have any tests, you can leave out the C<t>
    directory and C<basic.t> file for now. For more info on how to write
    tests (for now), you might have a look at how other modules use
    C<Test>. It's quite similar to Perl 5's C<Test::More>.

    =item To document your modules, use L<Perl 6 Pod |
    http://design.perl6.org/S26.html> markup inside your modules. Module
    documentation is most appreciated and will be especially important once
    the Perl 6 module directory (or some other site) begins rendering Pod docs
    as HTML for easy browsing.
    N«
        Note, described above is a minimal project directory. If your project
        contains scripts that you'd like distributed along with your module(s),
        put them in a C<bin> directory. If you have extra docs (in addition to the
        Pod docs in your module(s)), create a C<doc> directory for them. If you'd
        like a graphical logo to appear next to your module at the module
        directory, create a C<logotype> directory and put into it a C<logo_32x32.png>
        file. At some point, you might also consider adding C<CONTRIBUTORS>, C<NEWS>,
        C<TODO>, or other files.
    »

    =begin item
    Make your C<META.info> file look something like this:

    =for code :allow<R>
    {
        "name" : "Vortex::TotalPerspective",
        "version" : "0.1.0",
        "description" : "Wonderful simulation to get some perspective.",
        "author" : "R<Your Name>",
        "provides" : {
            "Vortex::TotalPerspective" : "lib/Vortex/TotalPerspective.pm"
        },
        "depends" : [ ],
        "source-url" : "git://github.com/R<you>/Vortex-TotalPerspective.git"
    }

    For choosing a version numbering scheme, perhaps use
    "major.minor.patch" (see L<the spec on versioning |
    http://design.perl6.org/S11.html#Versioning> for further
    details). If the version number doesn't matter to you or your users
    right now, you can just put in an asterisk (*) for the version.

    In C<provides> section, include all the namespaces provided by
    your distribution.

    =end item

    =item Put your project under git version control if you haven't done so
    already.

    =item Once you're happy with your project, create a repo for it at GitHub.
    See L<GitHub's help docs|https://help.github.com/> if necessary. Your
    GitHub repo should be named the same as your project directory. Immediately
    after creating the GitHub repo, GitHub shows you how to configure your
    local repo to know about your GitHub repo.

    =item Push your project to GitHub.

    =item Ping someone on IRC (#perl6 at freenode) to either show you how to
    add your module to the L<ecosystem|https://github.com/perl6/ecosystem>, or
    else ask them if they could please add it for you.

B<That's it! Thanks for contributing to the Perl 6 community!>

If you'd like to try out installing your module, use the panda module
installer tool which is included with Rakudo Star Perl 6:

=code panda install Vortex::TotalPerspective

This will download your module to its own working directory (C<~/.panda>),
build it there, and install the module into C<~/.perl6>.

To use C<Vortex::TotalPerspective> from your scripts, just write
C<use Vortex::TotalPerspective>, and your Perl 6 implementation will
know where to look for the module file(s).

=end pod
