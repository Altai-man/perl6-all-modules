=pod

=encoding utf8

=head2 Zef

Perl6 Module Management

=for HTML <a href="https://travis-ci.org/ugexe/zef"><img src="https://travis-ci.org/ugexe/zef.svg?branch=master"></a>
          <a href="https://ci.appveyor.com/project/ugexe/zef/branch/master"><img src="https://ci.appveyor.com/api/projects/status/github/ugexe/zef?branch=master&passingText=Windows%20-%20OK&failingText=Windows%20-%20FAIL&pendingText=Windows%20-%20pending&svg=true"></a>

=head1 Installation

=head4 Rakudobrew

To install it via rakudobrew, please use the following command:

    $ rakudobrew build-zef

=head4 Manual

    git clone https://github.com/ugexe/zef.git
    cd zef
    perl6 -Ilib bin/zef install .

=head1 USAGE

    # duh
    zef install CSV::Parser

    # search for module names matching `CSV::Parser`
    zef search CSV::Parser

    # test project in current directory    
    zef test .

    # fetch a specific module only
    zef get CSV::Parser

=head2 Notice

Still Beta level software. The process of implementing all of the previous features, test suite, and documentation is
still in the works (see an older readme to see expected full feature set). No real work has been done porting over the
old CLI overlay from the previous version of Zef, so the output is rather bleh.

=head2 More CLI

=head4 B<install>

Note: The install process does not install anything until all other phases have completed. So if A requires B,
and a user has requested to C<install A>, it would download A and B, possibly Build A and B, test A and B,
and then finally install A and B but only if A and B passed all their tests. For instance: if A failed its
tests then B will not be installed (even if it passed its own tests) without force.
    
    # install the requested modules regardless of: currently installed versions,
    # test results, or failed dependency installations
    --force

    # install to a location determined by short-id
    --install-to=<id> # site/home/vendor/perl

    # More detailed output
    --verbose

    # do everything except the actual installations
    --dry

    # disable testing
    --/test

    # When multiple content storages are used this will use
    # the install candidate with the highest matching version
    # ***option name may change***
    --upgrade

    # disable fetching dependencies
    --/depends
    --/build-depends
    --/test-depends

=head4 B<update>

Update the package indexes for all `ContentStorage` backends

=head4 B<search>

How these are handled depends on the `ContentStorage` engine used, which by default is the p6c ecosystem and
metacpan. Note that metacpan search is not likely to produce any useful results yet. More documentation will
be available when I have a better idea how to integrate results from these 2 services.

=head2 Plugins and Configuration

See the root zef directory for config.json. Each phase module will attempt to load/use each plugin in order.
More details to be made available in time, but they are fairly simple and the code itself should provide enough
insight to get something done.

See the configuration file in L<resources/config.json|https://github.com/ugexe/zef/blob/master/resources/config.json> for a little more information on how plugins are invoked.

=head1 FAQ

=head3 CPAN?

The functionality is mostly there. The API to search and find a specific module needs more work, but currently can execute
a query and takes the first matching distribution name. It can also download, extract, and install as well. Other than
polishing up the search API access it needs metacpan itself to host Perl6 distributions (not interested in the PSIXDIST
author hackery).

=head3 Proxy support?

All the default fetching plugins support it except for the windows specific `download.pm6` (which only needs a slight change).
However the git fetcher should support proxies on windows, and a git url is the first mirror tried for fetching package lists
(for the p6c ecosystem) so for the most part it should Just Work.

=cut
